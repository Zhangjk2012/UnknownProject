akka {

  loggers = ["akka.event.Logging$DefaultLogger"]

  logging-filter = "akka.event.DefaultLoggingFilter"

  loggers-dispatcher = "akka.actor.default-dispatcher"
  logger-startup-timeout = 5s

  loglevel = "INFO"

  stdout-loglevel = "INFO"

  log-config-on-start = off

  actor {

    provider = "remote"

    guardian-supervisor-strategy = "akka.actor.DefaultSupervisorStrategy"

    creation-timeout = 20s

    deployment {
      default {
        dispatcher = "akka.actor.my-dispatcher"
      }
      /myactor {
        dispatcher = "akka.actor.my-dispatcher"
      }
    }

    serialization-bindings {
      "com.google.protobuf.GeneratedMessageV3" = proto
    }

    # Dispatcher:这种就是常用的分发器。fork-join-executor、thread-pool-executor、executor

    # 坑爹的akka文档，这个分发器在代码中已经废弃了，用BalancingPool替代，但是竟然，文档不同步更新。
    # 而这个pool不能在这里配置，在程序代码中写：
    # akka.actor.deployment {
    #   /parent/router9 {
    #     router = balancing-pool
    #     nr-of-instances = 5
    #   }
    # }
    # 或者：val router10: ActorRef = context.actorOf(BalancingPool(5).props(Props[Worker]), "router10")


    # BalancingDispatcher：这种分发器可以重新构建，从繁忙的actor中迁移到空闲的actor中。它们的mailbox是共享的，即：只有一个mailbox。不能用这种分发器作为Router Dispatcher，可以用它作为:Routees的分发器。

    # CallingThreadDispatcher:这种分发器是请求使用当前线程，不创建新的线程。需要测试，理解此意思
    # PinnedDispatcher: 这种分发器是：每一个actor都有一个线程池，每个线程池里面只有一个线程
    my-dispatcher {
      type = "Dispatcher"
      executor = "thread-pool-executor"

      fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 3.0
        parallelism-max = 64
        task-peeking-mode = "FIFO"
      }

      thread-pool-executor {
        keep-alive-time = 60s
        fixed-pool-size = off
        core-pool-size-min = 8
        core-pool-size-factor = 3.0
        core-pool-size-max = 64
        max-pool-size-min = 8
        max-pool-size-factor  = 3.0
        max-pool-size-max = 64
        task-queue-size = -1
        task-queue-type = "linked"
        allow-core-timeout = on
      }
      shutdown-timeout = 1s
      throughput = 5
      throughput-deadline-time = 0ms
    }

    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }

  }

}